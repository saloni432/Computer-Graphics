#include<GL/glut.h>
#include<math.h>
float shift=0;//variable used to move boat
void init(void)
{
glClearColor(0.0,0.0,0.0,0.0);
glMatrixMode(GL_PROJECTION);
gluOrtho2D(-200,200,-200,200);
}
void lineSegment(void)
{
float theta;
glClear(GL_COLOR_BUFFER_BIT);

glBegin(GL_TRIANGLES);//hill1
glColor3f(0.0,1.0,0.0);
glVertex2i(-200,150);
glVertex2i(-150,200);
glVertex2i(-100,150);
glEnd();

glBegin(GL_TRIANGLES);//hill2
glColor3f(0.0,1.0,0.0);
glVertex2i(-100,150);
glVertex2i(-50,200);
glVertex2i(0,150);
glEnd();

glBegin(GL_TRIANGLES);//hill3
glColor3f(0.0,1.0,0.0);
glVertex2i(0,150);
glVertex2i(50,200);
glVertex2i(100,150);
glEnd();

glBegin(GL_TRIANGLES);//hill4
glColor3f(0.0,1.0,0.0);
glVertex2i(100,150);
glVertex2i(150,200);
glVertex2i(200,150);
glEnd();

glBegin(GL_QUADS);//hut top yellow
glColor3f(1.0,1.0,0.0);
glVertex2i(80,100);
glVertex2i(50,50);
glVertex2i(150,50);
glVertex2i(120,100);
glEnd();

glBegin(GL_QUADS);//hut bottom brown
glColor3f(0.674,0.294,0.047);
glVertex2i(70,50);
glVertex2i(70,10);
glVertex2i(130,10);
glVertex2i(130,50);
glEnd();

glBegin(GL_LINE_LOOP);//star
glColor3f(1.0,1.0,1.0);
glVertex2i(110,180);
glVertex2i(90,170);
glVertex2i(100,190);
glVertex2i(110,170);
glVertex2i(90,180);
glEnd();

glBegin(GL_POLYGON);//moon
glColor3f(1.0,1.0,1.0);
for(int i=0;i<360;i++)
{
theta=i*3.142/180;
glVertex2f(-100+18*cos(theta),180+18*sin(theta));
}
glEnd();

glBegin(GL_QUADS);//water
glColor3f(0.0,1.0,1.0);
glVertex2i(-200,-100);
glVertex2i(-200,-200);
glVertex2i(200,-200);
glVertex2i(200,-100);
glEnd();

glBegin(GL_QUADS);//boat
glColor3f(0.674,0.047,0.066);
glVertex2i(-150+shift,-60);
glVertex2i(-130+shift,-120);
glVertex2i(-70+shift,-120);
glVertex2i(-50+shift,-60);
glEnd();

glBegin(GL_QUADS);//boat wood
glColor3f(0.674,0.137,0.047);
glVertex2i(-130+shift,-20);
glVertex2i(-130+shift,-60);
glVertex2i(-125+shift,-60);
glVertex2i(-125+shift,-20);
glEnd();
glFlush();
glutSwapBuffers();
}

void day(unsigned char key, int x, int y)
{float theta;
switch(key)
{
case 'r':

glBegin(GL_TRIANGLES);//hill1
glColor3f(0.0,1.0,0.0);
glVertex2i(-200,150);
glVertex2i(-150,200);
glVertex2i(-100,150);
glEnd();

glBegin(GL_TRIANGLES);//hill2
glColor3f(0.0,1.0,0.0);
glVertex2i(-100,150);
glVertex2i(-50,200);
glVertex2i(0,150);
glEnd();

glBegin(GL_TRIANGLES);//hill3
glColor3f(0.0,1.0,0.0);
glVertex2i(0,150);
glVertex2i(50,200);
glVertex2i(100,150);
glEnd();

glBegin(GL_TRIANGLES);//hill4
glColor3f(0.0,1.0,0.0);
glVertex2i(100,150);
glVertex2i(150,200);
glVertex2i(200,150);
glEnd();

glBegin(GL_QUADS);//hut top red
glColor3f(1.0,0.0,0.0);
glVertex2i(80,100);
glVertex2i(50,50);
glVertex2i(150,50);
glVertex2i(120,100);
glEnd();

glBegin(GL_QUADS);//hut bottom brown
glColor3f(0.674,0.294,0.047);
glVertex2i(70,50);
glVertex2i(70,10);
glVertex2i(130,10);
glVertex2i(130,50);
glEnd();

glBegin(GL_LINE_LOOP);//star
glColor3f(1.0,1.0,1.0);
glVertex2i(110,180);
glVertex2i(90,170);
glVertex2i(100,190);
glVertex2i(110,170);
glVertex2i(90,180);
glEnd();

glBegin(GL_POLYGON);//moon
glColor3f(1.0,1.0,1.0);
for(int i=0;i<360;i++)
{
theta=i*3.142/180;
glVertex2f(-100+18*cos(theta),180+18*sin(theta));
}
glEnd();

glBegin(GL_QUADS);//water
glColor3f(0.0,1.0,1.0);
glVertex2i(-200,-100);
glVertex2i(-200,-200);
glVertex2i(200,-200);
glVertex2i(200,-100);
glEnd();

glBegin(GL_QUADS);//boat
glColor3f(0.674,0.047,0.066);
glVertex2i(-150+shift,-60);
glVertex2i(-130+shift,-120);
glVertex2i(-70+shift,-120);
glVertex2i(-50+shift,-60);
glEnd();

glBegin(GL_QUADS);//boat wood
glColor3f(0.674,0.137,0.047);
glVertex2i(-130+shift,-20);
glVertex2i(-130+shift,-60);
glVertex2i(-125+shift,-60);
glVertex2i(-125+shift,-20);
glEnd();
glFlush();
  break;
 
 
 
 case 'b':
 
glBegin(GL_TRIANGLES);//hill1
glColor3f(0.0,1.0,0.0);
glVertex2i(-200,150);
glVertex2i(-150,200);
glVertex2i(-100,150);
glEnd();

glBegin(GL_TRIANGLES);//hill2
glColor3f(0.0,1.0,0.0);
glVertex2i(-100,150);
glVertex2i(-50,200);
glVertex2i(0,150);
glEnd();

glBegin(GL_TRIANGLES);//hill3
glColor3f(0.0,1.0,0.0);
glVertex2i(0,150);
glVertex2i(50,200);
glVertex2i(100,150);
glEnd();

glBegin(GL_TRIANGLES);//hill4
glColor3f(0.0,1.0,0.0);
glVertex2i(100,150);
glVertex2i(150,200);
glVertex2i(200,150);
glEnd();

glBegin(GL_QUADS);//hut top blue
glColor3f(0.0,0.0,1.0);
glVertex2i(80,100);
glVertex2i(50,50);
glVertex2i(150,50);
glVertex2i(120,100);
glEnd();

glBegin(GL_QUADS);//hut bottom brown
glColor3f(0.674,0.294,0.047);
glVertex2i(70,50);
glVertex2i(70,10);
glVertex2i(130,10);
glVertex2i(130,50);
glEnd();

glBegin(GL_LINE_LOOP);//star
glColor3f(1.0,1.0,1.0);
glVertex2i(110,180);
glVertex2i(90,170);
glVertex2i(100,190);
glVertex2i(110,170);
glVertex2i(90,180);
glEnd();

glBegin(GL_POLYGON);//moon
glColor3f(1.0,1.0,1.0);
for(int i=0;i<360;i++)
{
theta=i*3.142/180;
glVertex2f(-100+18*cos(theta),180+18*sin(theta));
}
glEnd();

glBegin(GL_QUADS);//water
glColor3f(0.0,1.0,1.0);
glVertex2i(-200,-100);
glVertex2i(-200,-200);
glVertex2i(200,-200);
glVertex2i(200,-100);
glEnd();

glBegin(GL_QUADS);//boat
glColor3f(0.674,0.047,0.066);
glVertex2i(-150+shift,-60);
glVertex2i(-130+shift,-120);
glVertex2i(-70+shift,-120);
glVertex2i(-50+shift,-60);
glEnd();

glBegin(GL_QUADS);//boat wood
glColor3f(0.674,0.137,0.047);
glVertex2i(-130+shift,-20);
glVertex2i(-130+shift,-60);
glVertex2i(-125+shift,-60);
glVertex2i(-125+shift,-20);
glEnd();
glFlush();
               
case 'e':
default:
break;    
}

}

void key(int key, int x, int y) //special function
{
switch(key)
{
case GLUT_KEY_LEFT :
shift--;
glutPostRedisplay();
break;
case GLUT_KEY_RIGHT :
shift++;
glutPostRedisplay();
break;
}
}


int main(int argc , char** argv)
{
 glutInit(&argc , argv);
glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
glutInitWindowPosition(100,100);
glutInitWindowSize(1000,1000);
glutCreateWindow("first program");
init();
glutDisplayFunc(lineSegment);

glutSpecialFunc(key);
glutKeyboardFunc(day);

glutMainLoop();
return 0;
}
